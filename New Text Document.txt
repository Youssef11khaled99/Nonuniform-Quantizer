public int compressionMatrix (int number)
    {
        for (int i = 0; i < finalRange.size(); i++)
        {
            if (number < finalRange.get(i))
            {
                return i;
            }
        }
        return 0;
    }
    
    public void bulidCompressedMatrix (int [][]oldMatrix, int [][]newMatrix)
    {
        int rows = oldMatrix.length;
        int cols = oldMatrix[0].length ;
        for (int i = 0; i < rows;i++)
        {
            for (int j = 0; j < cols; j++)
            {
                newMatrix[i][j]=0;
            }
        }
         for (int i = 0; i < rows;i++)
        {
            for (int j = 0; j < cols; j++)
            {
                newMatrix[i][j]=compressionMatrix(oldMatrix[i][j]);
            }
        }
    }
    
    public void bulidDecompressedMatrix(int [][]oldMatrix, int [][]newMatrix)
    {
        int rows = oldMatrix.length;
        int cols = oldMatrix[0].length ;
        for (int i = 0; i < rows;i++)
        {
            for (int j = 0; j < cols; j++)
            {
                newMatrix[i][j]=0;
            }
        }
         for (int i = 0; i < rows;i++)
        {
            for (int j = 0; j < cols; j++)
            {
                newMatrix[i][j]=findRange(oldMatrix[i][j]);
            }
        }
        
    }